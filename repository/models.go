// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package repository

import (
	"database/sql"
	"fmt"
)

type Provider string

const (
	ProviderGOOGLE   Provider = "GOOGLE"
	ProviderFACEBOOK Provider = "FACEBOOK"
	ProviderAPPLE    Provider = "APPLE"
)

func (e *Provider) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Provider(s)
	case string:
		*e = Provider(s)
	default:
		return fmt.Errorf("unsupported scan type for Provider: %T", src)
	}
	return nil
}

type Type string

const (
	TypeUSER    Type = "USER"
	TypeADMIN   Type = "ADMIN"
	TypeDEV     Type = "DEV"
	TypeCOMPANY Type = "COMPANY"
)

func (e *Type) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Type(s)
	case string:
		*e = Type(s)
	default:
		return fmt.Errorf("unsupported scan type for Type: %T", src)
	}
	return nil
}

type Account struct {
	ID            string
	Email         string
	EmailVerified bool
	EmailCode     sql.NullString
	PasswordHash  string
	Provider      Provider
	Type          Type
}
